@use "@/styles/Common.scss" as *;
@use "@/styles/Variables.scss" as *;

// Миксин для управления размером шрифта
@mixin font-size($min-width: null, $max-width: null, $size: null) {
  @if $min-width and $max-width {
    @media (min-width: $min-width) and (max-width: $max-width) {

      body,
      html {
        font-size: $size;
      }
    }
  }

  @else if $min-width {
    @media (min-width: $min-width) {

      body,
      html {
        font-size: $size;
      }
    }
  }

  @else if $max-width {
    @media (max-width: $max-width) {

      body,
      html {
        font-size: $size;
      }
    }
  }
}

:root {
  --index: 1.5vw + 1vh;
}

// Общие стили
body {
  @include no-padding();
  font-family: sans-serif;
  overflow: hidden;
}

section {
  width: 100%;
  height: 100vh;
}

h1,
h2,
h3,
h4,
h5,
h6,
p,
ul {
  margin: 0;
  padding: 0;
}

::selection {
  background-color: #02101f6c;
  color: #ffffff;
}

*::-webkit-scrollbar {
  width: 3px;
  /* Для Chrome, Safari и Edge */
}

*::-webkit-scrollbar-track {
  width: 3px;
  /* Для Chrome, Safari и Edge */
  background-color: #e7e4e477;
}

*::-webkit-scrollbar-thumb {
  width: 3px;
  /* Для Chrome, Safari и Edge */
  background-color: #161616;
}

@font-face {
  font-family: 'Wadik';
  src: url('@/assets/fonts/wadik/Wadik.otf') format('opentype');
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "RobotoCondensed";
  src: url("@/assets/fonts/roboto/RobotoCondensed-VariableFont_wght.ttf") format("truetype");
  font-weight: 100 900;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: "Helvetica";
  src: url("@/assets/fonts/helvetica/Helvetica.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

// Размеры шрифта для разных устройств
@include font-size($min-width: map-get($breakpoints, large-desktop), $size: 14px);
@include font-size($min-width: map-get($breakpoints, medium-desktop),
  $max-width: map-get($breakpoints, large-desktop),
  $size: 13px);
@include font-size($min-width: map-get($breakpoints, small-desktop),
  $max-width: map-get($breakpoints, medium-desktop),
  $size: 12px);
@include font-size($max-width: map-get($breakpoints, small-desktop), $size: 11px);
@include font-size($max-width: map-get($breakpoints, phone), $size: 10px);